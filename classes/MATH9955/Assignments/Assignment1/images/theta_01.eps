%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 187 575 604
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: 28 April 2018 22:05:47 o'clock IST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 300 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 300.000 l
0 300.000 l
0 0 l
h
f
0 0 0 RG
1.50000 w
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
0 0 400 300 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 290 rc
1.00000 w
2 J
0 j
0 J
1 j
q
0.647059 0.647059 0.647059 RG
Q
2 J
0 j
0 J
1 j
q
0.647059 0.647059 0.647059 RG
Q
2 J
0 j
1.50000 w
0 J
1 j
q
q
2.00000 w
0 0 1.00000 RG
49.0000 4.01592E-3 333.979 251.996 rc
newpath
51.0000 250.000 m
51.4324 229.639 l
51.8648 211.712 l
52.2972 195.863 l
52.7296 181.797 l
53.4821 160.858 l
54.2345 143.556 l
55.0808 127.487 l
55.9270 114.225 l
56.7789 103.094 l
57.6307 93.7279 l
59.3263 79.0184 l
60.8984 68.7519 l
62.5261 60.4875 l
64.2095 53.7488 l
65.8876 48.3631 l
67.6136 43.8505 l
69.1339 40.5340 l
70.8454 37.3728 l
72.5640 34.6805 l
74.2201 32.4496 l
75.7240 30.6754 l
77.5123 28.8221 l
79.0273 27.4339 l
80.7895 25.9944 l
82.3494 24.8538 l
84.0608 23.7252 l
85.6905 22.7534 l
87.3909 21.8317 l
88.9524 21.0578 l
90.6367 20.2912 l
92.3862 19.5608 l
93.9091 18.9733 l
95.5539 18.3840 l
97.2532 17.8191 l
98.9156 17.3052 l
100.524 16.8407 l
102.310 16.3592 l
103.914 15.9542 l
105.628 15.5481 l
107.180 15.2014 l
108.878 14.8437 l
110.475 14.5258 l
112.144 14.2112 l
113.776 13.9198 l
115.485 13.6306 l
117.131 13.3661 l
118.814 13.1090 l
120.483 12.8662 l
122.017 12.6532 l
123.774 12.4202 l
125.346 12.2211 l
127.023 12.0178 l
128.627 11.8315 l
130.409 11.6335 l
131.951 11.4690 l
133.702 11.2898 l
135.298 11.1330 l
137.043 10.9681 l
138.549 10.8311 l
140.265 10.6807 l
141.922 10.5408 l
143.577 10.4060 l
145.227 10.2764 l
146.812 10.1561 l
148.525 10.0305 l
150.158 9.91481 l
151.876 9.79707 l
153.432 9.69390 l
155.151 9.58348 l
156.798 9.48106 l
158.441 9.38205 l
160.157 9.28178 l
161.737 9.19218 l
163.356 9.10304 l
165.143 9.00755 l
166.761 8.92364 l
168.415 8.84022 l
170.098 8.75775 l
171.645 8.68399 l
173.294 8.60740 l
174.930 8.53341 l
176.680 8.45642 l
178.225 8.39021 l
180.007 8.31581 l
181.615 8.25041 l
183.207 8.18725 l
184.918 8.12103 l
186.636 8.05621 l
188.199 7.99865 l
189.859 7.93893 l
191.479 7.88203 l
193.235 7.82180 l
194.755 7.77088 l
196.500 7.71369 l
198.141 7.66119 l
199.766 7.61032 l
201.392 7.56051 l
203.050 7.51081 l
204.808 7.45930 l
206.420 7.41310 l
208.011 7.36842 l
209.712 7.32165 l
211.409 7.27597 l
212.933 7.23577 l
214.737 7.18914 l
216.247 7.15090 l
218.013 7.10705 l
219.698 7.06607 l
221.203 7.03013 l
222.896 6.99049 l
224.600 6.95138 l
226.295 6.91319 l
227.867 6.87844 l
229.495 6.84310 l
231.178 6.80725 l
232.856 6.77215 l
234.583 6.73672 l
236.103 6.70607 l
237.814 6.67216 l
239.533 6.63871 l
241.189 6.60707 l
242.693 6.57879 l
244.481 6.54576 l
245.996 6.51823 l
247.758 6.48677 l
249.318 6.45938 l
251.030 6.42981 l
252.659 6.40213 l
254.360 6.37371 l
255.921 6.34803 l
257.606 6.32077 l
259.355 6.29292 l
260.878 6.26905 l
262.523 6.24366 l
264.222 6.21785 l
265.884 6.19297 l
267.493 6.16929 l
269.279 6.14340 l
270.884 6.12049 l
272.597 6.09639 l
274.150 6.07487 l
275.847 6.05169 l
277.444 6.03019 l
279.113 6.00804 l
280.746 5.98671 l
282.454 5.96469 l
284.100 5.94378 l
285.783 5.92271 l
287.452 5.90210 l
288.986 5.88343 l
290.744 5.86232 l
292.316 5.84370 l
293.992 5.82411 l
295.596 5.80561 l
297.378 5.78535 l
298.921 5.76805 l
300.671 5.74867 l
302.267 5.73124 l
304.013 5.71241 l
305.519 5.69639 l
307.234 5.67837 l
308.891 5.66119 l
310.547 5.64422 l
312.196 5.62756 l
313.781 5.61174 l
315.494 5.59484 l
317.127 5.57894 l
318.846 5.56243 l
320.401 5.54765 l
322.121 5.53154 l
323.767 5.51626 l
325.410 5.50123 l
327.126 5.48571 l
328.706 5.47158 l
330.325 5.45729 l
332.112 5.44169 l
333.730 5.42775 l
335.385 5.41363 l
337.067 5.39946 l
338.614 5.38658 l
340.263 5.37300 l
341.899 5.35968 l
343.650 5.34559 l
345.194 5.33329 l
346.977 5.31927 l
348.585 5.30676 l
350.176 5.29451 l
351.887 5.28147 l
353.605 5.26855 l
355.168 5.25691 l
356.828 5.24469 l
358.449 5.23288 l
360.205 5.22021 l
361.724 5.20938 l
363.469 5.19706 l
365.110 5.18560 l
366.735 5.17439 l
368.361 5.16325 l
370.019 5.15203 l
371.777 5.14025 l
373.389 5.12959 l
374.980 5.11915 l
376.681 5.10809 l
378.379 5.09718 l
379.979 5.08702 l
S
cliprestore
newpath
0 0 m
0 290.000 l
390.000 290.000 l
390.000 0 l
h
W
Q
q
2.00000 w
[ 15.0000 5.00000 ] 0 d
1.00000 0 0 RG
49.0000 4.01592E-3 333.979 251.996 rc
newpath
51.0000 3.00401 m
52.7296 3.00401 l
54.2345 3.00401 l
55.9270 3.00401 l
57.6307 3.00401 l
59.3263 3.00401 l
60.8984 3.00401 l
62.5261 3.00401 l
64.2095 3.00401 l
65.8876 3.00401 l
67.6136 3.00401 l
69.1339 3.00401 l
70.8454 3.00401 l
72.5640 3.00401 l
74.2201 3.00401 l
75.7240 3.00401 l
77.5123 3.00401 l
79.0273 3.00401 l
80.7895 3.00401 l
82.3494 3.00401 l
84.0608 3.00401 l
85.6905 3.00401 l
87.3909 3.00401 l
88.9524 3.00401 l
90.6367 3.00401 l
92.3862 3.00401 l
93.9091 3.00401 l
95.5539 3.00401 l
97.2532 3.00401 l
98.9156 3.00401 l
100.524 3.00401 l
102.310 3.00401 l
103.914 3.00401 l
105.628 3.00401 l
107.180 3.00401 l
108.878 3.00401 l
110.475 3.00401 l
112.144 3.00401 l
113.776 3.00401 l
115.485 3.00401 l
117.131 3.00401 l
118.814 3.00401 l
120.483 3.00401 l
122.017 3.00401 l
123.774 3.00401 l
125.346 3.00401 l
127.023 3.00401 l
128.627 3.00401 l
130.409 3.00401 l
131.951 3.00401 l
133.702 3.00401 l
135.298 3.00401 l
137.043 3.00401 l
138.549 3.00401 l
140.265 3.00401 l
141.922 3.00401 l
143.577 3.00401 l
145.227 3.00401 l
146.812 3.00401 l
148.525 3.00401 l
150.158 3.00401 l
151.876 3.00401 l
153.432 3.00401 l
155.151 3.00401 l
156.798 3.00401 l
158.441 3.00401 l
160.157 3.00401 l
161.737 3.00401 l
163.356 3.00401 l
165.143 3.00401 l
166.761 3.00401 l
168.415 3.00401 l
170.098 3.00401 l
171.645 3.00401 l
173.294 3.00401 l
174.930 3.00401 l
176.680 3.00401 l
178.225 3.00401 l
180.007 3.00401 l
181.615 3.00401 l
183.207 3.00401 l
184.918 3.00401 l
186.636 3.00401 l
188.199 3.00401 l
189.859 3.00401 l
191.479 3.00401 l
193.235 3.00401 l
194.755 3.00401 l
196.500 3.00401 l
198.141 3.00401 l
199.766 3.00401 l
201.392 3.00401 l
203.050 3.00401 l
204.808 3.00401 l
206.420 3.00401 l
208.011 3.00401 l
209.712 3.00401 l
211.409 3.00401 l
212.933 3.00401 l
214.737 3.00401 l
216.247 3.00401 l
218.013 3.00401 l
219.698 3.00401 l
221.203 3.00401 l
222.896 3.00401 l
224.600 3.00401 l
226.295 3.00401 l
227.867 3.00401 l
229.495 3.00401 l
231.178 3.00401 l
232.856 3.00401 l
234.583 3.00401 l
236.103 3.00401 l
237.814 3.00401 l
239.533 3.00401 l
241.189 3.00401 l
242.693 3.00401 l
244.481 3.00401 l
245.996 3.00401 l
247.758 3.00401 l
249.318 3.00401 l
251.030 3.00401 l
252.659 3.00401 l
254.360 3.00401 l
255.921 3.00401 l
257.606 3.00401 l
259.355 3.00401 l
260.878 3.00401 l
262.523 3.00401 l
264.222 3.00401 l
265.884 3.00401 l
267.493 3.00401 l
269.279 3.00401 l
270.884 3.00401 l
272.597 3.00401 l
274.150 3.00401 l
275.847 3.00401 l
277.444 3.00401 l
279.113 3.00401 l
280.746 3.00401 l
282.454 3.00401 l
284.100 3.00401 l
285.783 3.00401 l
287.452 3.00401 l
288.986 3.00401 l
290.744 3.00401 l
292.316 3.00401 l
293.992 3.00401 l
295.596 3.00401 l
297.378 3.00401 l
298.921 3.00401 l
300.671 3.00401 l
302.267 3.00401 l
304.013 3.00401 l
305.519 3.00401 l
307.234 3.00401 l
308.891 3.00401 l
310.547 3.00401 l
312.196 3.00401 l
313.781 3.00401 l
315.494 3.00401 l
317.127 3.00401 l
318.846 3.00401 l
320.401 3.00401 l
322.121 3.00401 l
323.767 3.00401 l
325.410 3.00401 l
327.126 3.00401 l
328.706 3.00401 l
330.325 3.00401 l
332.112 3.00401 l
333.730 3.00401 l
335.385 3.00401 l
337.067 3.00401 l
338.614 3.00401 l
340.263 3.00401 l
341.899 3.00401 l
343.650 3.00401 l
345.194 3.00401 l
346.977 3.00401 l
348.585 3.00401 l
350.176 3.00401 l
351.887 3.00401 l
353.605 3.00401 l
355.168 3.00401 l
356.828 3.00401 l
358.449 3.00401 l
360.205 3.00401 l
361.724 3.00401 l
363.469 3.00401 l
365.110 3.00401 l
366.735 3.00401 l
368.361 3.00401 l
370.019 3.00401 l
371.777 3.00401 l
373.389 3.00401 l
374.980 3.00401 l
376.681 3.00401 l
378.379 3.00401 l
379.979 3.00401 l
S
cliprestore
newpath
0 0 m
0 290.000 l
390.000 290.000 l
390.000 0 l
h
W
Q
Q
q
1.00000 w
2 J
0 j
q
0 J
1 j
newpath
51.0000 250.000 m
379.979 250.000 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
209 273 12 17 rc
newpath
215.421 278.093 m
215.421 280.296 l
216.984 280.296 l
216.984 280.796 l
215.421 280.796 l
215.421 285.156 l
215.421 285.593 215.484 285.888 215.609 286.039  c
215.734 286.190 215.890 286.265 216.078 286.265  c
216.244 286.265 216.403 286.213 216.554 286.109  c
216.705 286.005 216.822 285.859 216.906 285.671  c
217.187 285.671 l
217.020 286.151 216.781 286.510 216.468 286.750  c
216.156 286.989 215.833 287.109 215.500 287.109  c
215.270 287.109 215.049 287.046 214.835 286.921  c
214.622 286.796 214.463 286.619 214.359 286.390  c
214.255 286.161 214.203 285.802 214.203 285.312  c
214.203 280.796 l
213.140 280.796 l
213.140 280.562 l
213.411 280.458 213.687 280.276 213.968 280.015  c
214.250 279.755 214.500 279.453 214.718 279.109  c
214.833 278.921 214.989 278.583 215.187 278.093  c
215.421 278.093 l
h
f
Q
cliprestore
newpath
0 0 m
0 290.000 l
390.000 290.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
1.00000 w
2 J
0 j
newpath
51.0000 250.000 m
51.0000 253.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
55.5000 275.265 m
54.3854 275.265 53.4843 274.747 52.7968 273.710  c
52.1093 272.674 51.7656 271.307 51.7656 269.609  c
51.7656 267.869 52.1093 266.481 52.7968 265.445  c
53.4843 264.408 54.4062 263.890 55.5625 263.890  c
56.7187 263.890 57.6406 264.406 58.3281 265.437  c
59.0156 266.468 59.3593 267.854 59.3593 269.593  c
59.3593 271.333 59.0130 272.713 58.3203 273.734  c
57.6276 274.755 56.6875 275.265 55.5000 275.265  c
h
55.5312 274.812 m
57.0625 274.885 57.8281 273.114 57.8281 269.500  c
57.8281 266.052 57.0729 264.328 55.5625 264.328  c
54.0625 264.328 53.3125 266.078 53.3125 269.578  c
53.3125 273.005 54.0520 274.750 55.5312 274.812  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
116.795 250.000 m
116.795 253.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
117.281 264.062 m
117.281 273.109 l
117.328 273.828 l
117.349 274.119 117.434 274.309 117.585 274.398  c
117.737 274.487 118.046 274.531 118.515 274.531  c
119.375 274.546 l
119.375 275.000 l
113.765 275.000 l
113.765 274.546 l
114.625 274.531 l
115.083 274.531 115.388 274.487 115.539 274.398  c
115.690 274.309 115.776 274.119 115.796 273.828  c
115.843 273.109 l
115.843 266.375 l
115.796 265.640 l
115.796 265.296 115.697 265.125 115.500 265.125  c
115.354 265.125 115.015 265.171 114.484 265.265  c
113.765 265.390 l
113.765 264.937 l
117.281 264.062 l
h
125.626 275.265 m
124.511 275.265 123.610 274.747 122.922 273.710  c
122.235 272.674 121.891 271.307 121.891 269.609  c
121.891 267.869 122.235 266.481 122.922 265.445  c
123.610 264.408 124.532 263.890 125.688 263.890  c
126.844 263.890 127.766 264.406 128.454 265.437  c
129.141 266.468 129.485 267.854 129.485 269.593  c
129.485 271.333 129.139 272.713 128.446 273.734  c
127.753 274.755 126.813 275.265 125.626 275.265  c
h
125.657 274.812 m
127.188 274.885 127.954 273.114 127.954 269.500  c
127.954 266.052 127.198 264.328 125.688 264.328  c
124.188 264.328 123.438 266.078 123.438 269.578  c
123.438 273.005 124.178 274.750 125.657 274.812  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
182.591 250.000 m
182.591 253.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
179.171 275.000 m
179.171 274.281 l
179.588 273.062 180.239 272.041 181.125 271.218  c
181.906 270.500 l
182.802 269.656 183.398 268.987 183.695 268.492  c
183.992 267.997 184.140 267.432 184.140 266.796  c
184.140 266.057 183.958 265.463 183.593 265.015  c
183.229 264.567 182.750 264.343 182.156 264.343  c
181.489 264.343 180.927 264.526 180.468 264.890  c
180.302 265.026 180.192 265.510 180.140 266.343  c
180.140 266.515 l
179.406 266.515 l
179.406 264.546 l
180.458 264.099 181.432 263.875 182.328 263.875  c
183.307 263.875 184.109 264.151 184.734 264.703  c
185.359 265.255 185.671 265.953 185.671 266.796  c
185.671 267.942 184.963 269.000 183.546 269.968  c
182.671 270.578 l
181.265 271.546 180.494 272.599 180.359 273.734  c
185.625 273.734 l
185.625 275.000 l
179.171 275.000 l
h
191.626 275.265 m
190.511 275.265 189.610 274.747 188.922 273.710  c
188.235 272.674 187.891 271.307 187.891 269.609  c
187.891 267.869 188.235 266.481 188.922 265.445  c
189.610 264.408 190.532 263.890 191.688 263.890  c
192.844 263.890 193.766 264.406 194.454 265.437  c
195.141 266.468 195.485 267.854 195.485 269.593  c
195.485 271.333 195.139 272.713 194.446 273.734  c
193.753 274.755 192.813 275.265 191.626 275.265  c
h
191.657 274.812 m
193.188 274.885 193.954 273.114 193.954 269.500  c
193.954 266.052 193.198 264.328 191.688 264.328  c
190.188 264.328 189.438 266.078 189.438 269.578  c
189.438 273.005 190.178 274.750 191.657 274.812  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
248.387 250.000 m
248.387 253.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
245.359 274.921 m
245.359 273.015 l
246.078 273.015 l
246.093 273.171 l
246.109 273.687 l
246.109 274.000 246.294 274.268 246.664 274.492  c
247.033 274.716 247.484 274.828 248.015 274.828  c
248.651 274.828 249.164 274.575 249.554 274.070  c
249.945 273.565 250.140 272.895 250.140 272.062  c
250.140 271.239 249.885 270.596 249.375 270.132  c
248.864 269.669 248.156 269.437 247.250 269.437  c
246.343 269.437 l
246.343 269.000 l
246.828 269.000 l
248.880 269.000 249.906 268.177 249.906 266.531  c
249.906 265.062 249.260 264.328 247.968 264.328  c
247.406 264.328 246.911 264.447 246.484 264.687  c
246.328 264.781 246.224 265.171 246.171 265.859  c
246.156 265.968 l
245.437 265.968 l
245.437 264.312 l
246.218 264.020 247.104 263.875 248.093 263.875  c
249.093 263.875 249.885 264.099 250.468 264.546  c
251.052 264.994 251.343 265.604 251.343 266.375  c
251.343 267.666 250.583 268.588 249.062 269.140  c
249.989 269.380 250.653 269.721 251.054 270.164  c
251.455 270.606 251.656 271.224 251.656 272.015  c
251.656 273.015 251.333 273.807 250.687 274.390  c
250.041 274.974 249.161 275.265 248.046 275.265  c
247.015 275.265 246.119 275.151 245.359 274.921  c
h
257.626 275.265 m
256.511 275.265 255.610 274.747 254.922 273.710  c
254.235 272.674 253.891 271.307 253.891 269.609  c
253.891 267.869 254.235 266.481 254.922 265.445  c
255.610 264.408 256.532 263.890 257.688 263.890  c
258.844 263.890 259.766 264.406 260.454 265.437  c
261.141 266.468 261.485 267.854 261.485 269.593  c
261.485 271.333 261.139 272.713 260.446 273.734  c
259.753 274.755 258.813 275.265 257.626 275.265  c
h
257.657 274.812 m
259.188 274.885 259.954 273.114 259.954 269.500  c
259.954 266.052 259.198 264.328 257.688 264.328  c
256.188 264.328 255.438 266.078 255.438 269.578  c
255.438 273.005 256.178 274.750 257.657 274.812  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
314.183 250.000 m
314.183 253.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
315.421 271.937 m
310.453 271.937 l
310.453 271.203 l
315.875 263.984 l
316.687 263.984 l
316.687 270.843 l
318.140 270.843 l
318.140 271.937 l
316.687 271.937 l
316.687 273.109 l
316.687 273.682 316.731 274.052 316.820 274.218  c
316.908 274.385 317.104 274.479 317.406 274.500  c
317.906 274.531 l
318.046 274.546 l
318.046 275.000 l
313.890 275.000 l
313.890 274.546 l
314.015 274.531 l
314.781 274.500 l
315.041 274.489 315.213 274.393 315.296 274.210  c
315.380 274.028 315.421 273.661 315.421 273.109  c
315.421 271.937 l
h
311.265 270.843 m
315.421 270.843 l
315.421 265.312 l
311.265 270.843 l
h
323.626 275.265 m
322.511 275.265 321.610 274.747 320.922 273.710  c
320.235 272.674 319.891 271.307 319.891 269.609  c
319.891 267.869 320.235 266.481 320.922 265.445  c
321.610 264.408 322.532 263.890 323.688 263.890  c
324.844 263.890 325.766 264.406 326.454 265.437  c
327.141 266.468 327.485 267.854 327.485 269.593  c
327.485 271.333 327.139 272.713 326.446 273.734  c
325.753 274.755 324.813 275.265 323.626 275.265  c
h
323.657 274.812 m
325.188 274.885 325.954 273.114 325.954 269.500  c
325.954 266.052 325.198 264.328 323.688 264.328  c
322.188 264.328 321.438 266.078 321.438 269.578  c
321.438 273.005 322.178 274.750 323.657 274.812  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
379.979 250.000 m
379.979 253.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
376.718 275.015 m
376.718 273.187 l
377.437 273.187 l
377.453 273.359 l
377.468 273.921 l
377.500 274.515 377.968 274.812 378.875 274.812  c
379.552 274.812 380.088 274.549 380.484 274.023  c
380.880 273.497 381.078 272.781 381.078 271.875  c
381.078 270.843 380.770 270.106 380.156 269.664  c
379.541 269.221 378.541 269.000 377.156 269.000  c
376.890 269.000 l
376.890 264.156 l
382.359 264.156 l
382.359 265.421 l
377.343 265.421 l
377.343 268.453 l
378.015 268.453 l
381.067 268.453 382.593 269.614 382.593 271.937  c
382.593 272.979 382.242 273.794 381.539 274.382  c
380.835 274.971 379.864 275.265 378.625 275.265  c
378.010 275.265 377.375 275.182 376.718 275.015  c
h
388.626 275.265 m
387.511 275.265 386.610 274.747 385.922 273.710  c
385.235 272.674 384.891 271.307 384.891 269.609  c
384.891 267.869 385.235 266.481 385.922 265.445  c
386.610 264.408 387.532 263.890 388.688 263.890  c
389.844 263.890 390.766 264.406 391.454 265.437  c
392.141 266.468 392.485 267.854 392.485 269.593  c
392.485 271.333 392.139 272.713 391.446 273.734  c
390.753 274.755 389.813 275.265 388.626 275.265  c
h
388.657 274.812 m
390.188 274.885 390.954 273.114 390.954 269.500  c
390.954 266.052 390.198 264.328 388.688 264.328  c
387.188 264.328 386.438 266.078 386.438 269.578  c
386.438 273.005 387.178 274.750 388.657 274.812  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
83.8979 250.000 m
83.8979 251.750 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
149.693 250.000 m
149.693 251.750 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
215.489 250.000 m
215.489 251.750 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
281.285 250.000 m
281.285 251.750 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
347.081 250.000 m
347.081 251.750 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
Q
2 J
0 j
q
0 J
1 j
newpath
51.0000 250.000 m
51.0000 3.00401 l
S
Q
0 J
1 j
[ 0 -1.00000 1.00000 0 -110.000 142.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
-3 116 29 20 rc
newpath
3.15625 127.265 m
3.25000 128.812 l
3.27083 129.187 3.33333 129.546 3.43750 129.890  c
3.54166 130.234 3.67187 130.539 3.82812 130.804  c
3.98437 131.070 4.16145 131.283 4.35937 131.445  c
4.55729 131.606 4.76041 131.687 4.96875 131.687  c
5.18750 131.687 5.39583 131.599 5.59375 131.421  c
5.79166 131.244 5.96614 131.020 6.11718 130.750  c
6.26822 130.479 6.39322 130.174 6.49218 129.835  c
6.59114 129.497 6.65104 129.161 6.67187 128.828  c
6.76562 127.265 l
3.15625 127.265 l
h
6.68750 125.062 m
6.67708 124.927 6.65625 124.773 6.62500 124.601  c
6.59375 124.429 6.55468 124.260 6.50781 124.093  c
6.46093 123.927 6.41406 123.763 6.36718 123.601  c
6.32031 123.440 6.26562 123.302 6.20312 123.187  c
6.05729 122.895 5.86458 122.651 5.62500 122.453  c
5.38541 122.255 5.15625 122.156 4.93750 122.156  c
4.78125 122.156 4.58072 122.247 4.33593 122.429  c
4.09114 122.612 3.90104 122.838 3.76562 123.109  c
3.69270 123.244 3.62500 123.398 3.56250 123.570  c
3.50000 123.742 3.44791 123.914 3.40625 124.085  c
3.36458 124.257 3.32812 124.429 3.29687 124.601  c
3.26562 124.773 3.24479 124.921 3.23437 125.046  c
3.14062 126.484 l
6.78125 126.484 l
6.68750 125.062 l
h
8.28125 126.734 m
8.28125 127.557 8.22395 128.270 8.10937 128.875  c
7.99479 129.479 7.83854 129.968 7.64062 130.343  c
7.52604 130.593 7.37500 130.835 7.18750 131.070  c
7.00000 131.304 6.78906 131.507 6.55468 131.679  c
6.32031 131.851 6.07031 131.989 5.80468 132.093  c
5.53906 132.197 5.26041 132.250 4.96875 132.250  c
4.44791 132.250 3.94531 132.085 3.46093 131.757  c
2.97656 131.429 2.58854 130.963 2.29687 130.359  c
2.07812 129.942 1.91406 129.437 1.80468 128.843  c
1.69531 128.250 1.64062 127.546 1.64062 126.734  c
1.64062 126.057 1.69010 125.487 1.78906 125.023  c
1.88802 124.559 2.03125 124.140 2.21875 123.765  c
2.36458 123.453 2.54166 123.169 2.75000 122.914  c
2.95833 122.658 3.18229 122.437 3.42187 122.250  c
3.66145 122.062 3.91145 121.916 4.17187 121.812  c
4.43229 121.708 4.69791 121.656 4.96875 121.656  c
5.18750 121.656 5.41927 121.697 5.66406 121.781  c
5.90885 121.864 6.15364 121.994 6.39843 122.171  c
6.64322 122.349 6.88020 122.572 7.10937 122.843  c
7.33854 123.114 7.54687 123.437 7.73437 123.812  c
7.92187 124.187 8.05989 124.617 8.14843 125.101  c
8.23697 125.585 8.28125 126.130 8.28125 126.734  c
h
f
newpath
12.6562 134.937 m
12.6562 135.203 l
11.9166 134.838 11.3020 134.406 10.8125 133.906  c
10.1145 133.197 9.57291 132.362 9.18750 131.398  c
8.80208 130.434 8.60937 129.437 8.60937 128.406  c
8.60937 126.895 8.98437 125.515 9.73437 124.265  c
10.4843 123.015 11.4583 122.119 12.6562 121.578  c
12.6562 121.890 l
12.0520 122.224 11.5572 122.679 11.1718 123.257  c
10.7864 123.835 10.5000 124.565 10.3125 125.445  c
10.1250 126.325 10.0312 127.250 10.0312 128.218  c
10.0312 129.260 10.1093 130.208 10.2656 131.062  c
10.4010 131.739 10.5572 132.281 10.7343 132.687  c
10.9114 133.093 11.1536 133.484 11.4609 133.859  c
11.7682 134.234 12.1666 134.593 12.6562 134.937  c
h
15.4169 123.093 m
15.4169 125.296 l
16.9794 125.296 l
16.9794 125.796 l
15.4169 125.796 l
15.4169 130.156 l
15.4169 130.593 15.4794 130.888 15.6044 131.039  c
15.7294 131.190 15.8857 131.265 16.0732 131.265  c
16.2399 131.265 16.3987 131.213 16.5498 131.109  c
16.7008 131.005 16.8180 130.859 16.9013 130.671  c
17.1826 130.671 l
17.0159 131.151 16.7763 131.510 16.4638 131.750  c
16.1513 131.989 15.8284 132.109 15.4951 132.109  c
15.2659 132.109 15.0446 132.046 14.8310 131.921  c
14.6175 131.796 14.4586 131.619 14.3544 131.390  c
14.2503 131.161 14.1982 130.802 14.1982 130.312  c
14.1982 125.796 l
13.1357 125.796 l
13.1357 125.562 l
13.4065 125.458 13.6826 125.276 13.9638 125.015  c
14.2451 124.755 14.4951 124.453 14.7138 124.109  c
14.8284 123.921 14.9847 123.583 15.1826 123.093  c
15.4169 123.093 l
h
17.5063 121.890 m
17.5063 121.578 l
18.2459 121.953 18.8605 122.385 19.3501 122.875  c
20.0480 123.593 20.5870 124.432 20.9672 125.390  c
21.3474 126.349 21.5376 127.349 21.5376 128.390  c
21.5376 129.901 21.1652 131.281 20.4204 132.531  c
19.6756 133.781 18.7042 134.671 17.5063 135.203  c
17.5063 134.937 l
18.1001 134.604 18.5922 134.148 18.9829 133.570  c
19.3735 132.992 19.6626 132.260 19.8501 131.375  c
20.0376 130.489 20.1313 129.567 20.1313 128.609  c
20.1313 127.567 20.0480 126.619 19.8813 125.765  c
19.7667 125.088 19.6183 124.546 19.4360 124.140  c
19.2537 123.734 19.0089 123.343 18.7016 122.968  c
18.3943 122.593 17.9959 122.234 17.5063 121.890  c
h
f
Q
cliprestore
newpath
-153.000 115.000 m
-153.000 505.000 l
137.000 505.000 l
137.000 115.000 l
h
W
Q
[ 0 -1.00000 1.00000 0 -110.000 142.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
q
q
0 w
1.00000 w
2 J
0 j
newpath
51.0000 250.000 m
47.5000 250.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
44.5000 261.265 m
43.3854 261.265 42.4843 260.747 41.7968 259.710  c
41.1093 258.674 40.7656 257.307 40.7656 255.609  c
40.7656 253.869 41.1093 252.481 41.7968 251.445  c
42.4843 250.408 43.4062 249.890 44.5625 249.890  c
45.7187 249.890 46.6406 250.406 47.3281 251.437  c
48.0156 252.468 48.3593 253.854 48.3593 255.593  c
48.3593 257.333 48.0130 258.713 47.3203 259.734  c
46.6276 260.755 45.6875 261.265 44.5000 261.265  c
h
44.5312 260.812 m
46.0625 260.885 46.8281 259.114 46.8281 255.500  c
46.8281 252.052 46.0729 250.328 44.5625 250.328  c
43.0625 250.328 42.3125 252.078 42.3125 255.578  c
42.3125 259.005 43.0520 260.750 44.5312 260.812  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
51.0000 216.961 m
47.5000 216.961 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
31.5000 227.265 m
30.3854 227.265 29.4843 226.747 28.7968 225.710  c
28.1093 224.674 27.7656 223.307 27.7656 221.609  c
27.7656 219.869 28.1093 218.481 28.7968 217.445  c
29.4843 216.408 30.4062 215.890 31.5625 215.890  c
32.7187 215.890 33.6406 216.406 34.3281 217.437  c
35.0156 218.468 35.3593 219.854 35.3593 221.593  c
35.3593 223.333 35.0130 224.713 34.3203 225.734  c
33.6276 226.755 32.6875 227.265 31.5000 227.265  c
h
31.5312 226.812 m
33.0625 226.885 33.8281 225.114 33.8281 221.500  c
33.8281 218.052 33.0729 216.328 31.5625 216.328  c
30.0625 216.328 29.3125 218.078 29.3125 221.578  c
29.3125 225.005 30.0520 226.750 31.5312 226.812  c
h
37.2041 227.000 m
37.2041 225.187 l
39.0166 225.187 l
39.0166 227.000 l
37.2041 227.000 l
h
45.3842 216.062 m
45.3842 225.109 l
45.4311 225.828 l
45.4519 226.119 45.5379 226.309 45.6889 226.398  c
45.8400 226.487 46.1499 226.531 46.6186 226.531  c
47.4780 226.546 l
47.4780 227.000 l
41.8686 227.000 l
41.8686 226.546 l
42.7280 226.531 l
43.1863 226.531 43.4910 226.487 43.6420 226.398  c
43.7931 226.309 43.8790 226.119 43.8999 225.828  c
43.9467 225.109 l
43.9467 218.375 l
43.8999 217.640 l
43.8999 217.296 43.8009 217.125 43.6030 217.125  c
43.4571 217.125 43.1186 217.171 42.5874 217.265  c
41.8686 217.390 l
41.8686 216.937 l
45.3842 216.062 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
51.0000 183.922 m
47.5000 183.922 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
31.5000 194.265 m
30.3854 194.265 29.4843 193.747 28.7968 192.710  c
28.1093 191.674 27.7656 190.307 27.7656 188.609  c
27.7656 186.869 28.1093 185.481 28.7968 184.445  c
29.4843 183.408 30.4062 182.890 31.5625 182.890  c
32.7187 182.890 33.6406 183.406 34.3281 184.437  c
35.0156 185.468 35.3593 186.854 35.3593 188.593  c
35.3593 190.333 35.0130 191.713 34.3203 192.734  c
33.6276 193.755 32.6875 194.265 31.5000 194.265  c
h
31.5312 193.812 m
33.0625 193.885 33.8281 192.114 33.8281 188.500  c
33.8281 185.052 33.0729 183.328 31.5625 183.328  c
30.0625 183.328 29.3125 185.078 29.3125 188.578  c
29.3125 192.005 30.0520 193.750 31.5312 193.812  c
h
37.2041 194.000 m
37.2041 192.187 l
39.0166 192.187 l
39.0166 194.000 l
37.2041 194.000 l
h
41.2749 194.000 m
41.2749 193.281 l
41.6915 192.062 42.3426 191.041 43.2280 190.218  c
44.0092 189.500 l
44.9051 188.656 45.5014 187.987 45.7983 187.492  c
46.0952 186.997 46.2436 186.432 46.2436 185.796  c
46.2436 185.057 46.0613 184.463 45.6967 184.015  c
45.3321 183.567 44.8530 183.343 44.2592 183.343  c
43.5926 183.343 43.0301 183.526 42.5717 183.890  c
42.4051 184.026 42.2957 184.510 42.2436 185.343  c
42.2436 185.515 l
41.5092 185.515 l
41.5092 183.546 l
42.5613 183.099 43.5353 182.875 44.4311 182.875  c
45.4103 182.875 46.2124 183.151 46.8374 183.703  c
47.4624 184.255 47.7749 184.953 47.7749 185.796  c
47.7749 186.942 47.0665 188.000 45.6499 188.968  c
44.7749 189.578 l
43.3686 190.546 42.5978 191.599 42.4624 192.734  c
47.7280 192.734 l
47.7280 194.000 l
41.2749 194.000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
51.0000 150.884 m
47.5000 150.884 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
31.5000 161.265 m
30.3854 161.265 29.4843 160.747 28.7968 159.710  c
28.1093 158.674 27.7656 157.307 27.7656 155.609  c
27.7656 153.869 28.1093 152.481 28.7968 151.445  c
29.4843 150.408 30.4062 149.890 31.5625 149.890  c
32.7187 149.890 33.6406 150.406 34.3281 151.437  c
35.0156 152.468 35.3593 153.854 35.3593 155.593  c
35.3593 157.333 35.0130 158.713 34.3203 159.734  c
33.6276 160.755 32.6875 161.265 31.5000 161.265  c
h
31.5312 160.812 m
33.0625 160.885 33.8281 159.114 33.8281 155.500  c
33.8281 152.052 33.0729 150.328 31.5625 150.328  c
30.0625 150.328 29.3125 152.078 29.3125 155.578  c
29.3125 159.005 30.0520 160.750 31.5312 160.812  c
h
37.2041 161.000 m
37.2041 159.187 l
39.0166 159.187 l
39.0166 161.000 l
37.2041 161.000 l
h
41.4624 160.921 m
41.4624 159.015 l
42.1811 159.015 l
42.1967 159.171 l
42.2124 159.687 l
42.2124 160.000 42.3973 160.268 42.7670 160.492  c
43.1368 160.716 43.5874 160.828 44.1186 160.828  c
44.7540 160.828 45.2670 160.575 45.6577 160.070  c
46.0483 159.565 46.2436 158.895 46.2436 158.062  c
46.2436 157.239 45.9884 156.596 45.4780 156.132  c
44.9676 155.669 44.2592 155.437 43.3530 155.437  c
42.4467 155.437 l
42.4467 155.000 l
42.9311 155.000 l
44.9832 155.000 46.0092 154.177 46.0092 152.531  c
46.0092 151.062 45.3634 150.328 44.0717 150.328  c
43.5092 150.328 43.0144 150.447 42.5874 150.687  c
42.4311 150.781 42.3269 151.171 42.2749 151.859  c
42.2592 151.968 l
41.5405 151.968 l
41.5405 150.312 l
42.3217 150.020 43.2071 149.875 44.1967 149.875  c
45.1967 149.875 45.9884 150.099 46.5717 150.546  c
47.1551 150.994 47.4467 151.604 47.4467 152.375  c
47.4467 153.666 46.6863 154.588 45.1655 155.140  c
46.0926 155.380 46.7566 155.721 47.1577 156.164  c
47.5587 156.606 47.7592 157.224 47.7592 158.015  c
47.7592 159.015 47.4363 159.807 46.7905 160.390  c
46.1446 160.974 45.2644 161.265 44.1499 161.265  c
43.1186 161.265 42.2228 161.151 41.4624 160.921  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
51.0000 117.845 m
47.5000 117.845 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
31.5000 128.265 m
30.3854 128.265 29.4843 127.747 28.7968 126.710  c
28.1093 125.674 27.7656 124.307 27.7656 122.609  c
27.7656 120.869 28.1093 119.481 28.7968 118.445  c
29.4843 117.408 30.4062 116.890 31.5625 116.890  c
32.7187 116.890 33.6406 117.406 34.3281 118.437  c
35.0156 119.468 35.3593 120.854 35.3593 122.593  c
35.3593 124.333 35.0130 125.713 34.3203 126.734  c
33.6276 127.755 32.6875 128.265 31.5000 128.265  c
h
31.5312 127.812 m
33.0625 127.885 33.8281 126.114 33.8281 122.500  c
33.8281 119.052 33.0729 117.328 31.5625 117.328  c
30.0625 117.328 29.3125 119.078 29.3125 122.578  c
29.3125 126.005 30.0520 127.750 31.5312 127.812  c
h
37.2041 128.000 m
37.2041 126.187 l
39.0166 126.187 l
39.0166 128.000 l
37.2041 128.000 l
h
45.5249 124.937 m
40.5561 124.937 l
40.5561 124.203 l
45.9780 116.984 l
46.7905 116.984 l
46.7905 123.843 l
48.2436 123.843 l
48.2436 124.937 l
46.7905 124.937 l
46.7905 126.109 l
46.7905 126.682 46.8348 127.052 46.9233 127.218  c
47.0118 127.385 47.2071 127.479 47.5092 127.500  c
48.0092 127.531 l
48.1499 127.546 l
48.1499 128.000 l
43.9936 128.000 l
43.9936 127.546 l
44.1186 127.531 l
44.8842 127.500 l
45.1446 127.489 45.3165 127.393 45.3999 127.210  c
45.4832 127.028 45.5249 126.661 45.5249 126.109  c
45.5249 124.937 l
h
41.3686 123.843 m
45.5249 123.843 l
45.5249 118.312 l
41.3686 123.843 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
51.0000 84.8069 m
47.5000 84.8069 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
31.5000 95.2656 m
30.3854 95.2656 29.4843 94.7474 28.7968 93.7109  c
28.1093 92.6744 27.7656 91.3072 27.7656 89.6093  c
27.7656 87.8697 28.1093 86.4817 28.7968 85.4453  c
29.4843 84.4088 30.4062 83.8906 31.5625 83.8906  c
32.7187 83.8906 33.6406 84.4062 34.3281 85.4375  c
35.0156 86.4687 35.3593 87.8541 35.3593 89.5937  c
35.3593 91.3333 35.0130 92.7135 34.3203 93.7343  c
33.6276 94.7552 32.6875 95.2656 31.5000 95.2656  c
h
31.5312 94.8125 m
33.0625 94.8854 33.8281 93.1145 33.8281 89.5000  c
33.8281 86.0520 33.0729 84.3281 31.5625 84.3281  c
30.0625 84.3281 29.3125 86.0781 29.3125 89.5781  c
29.3125 93.0052 30.0520 94.7500 31.5312 94.8125  c
h
37.2041 95.0000 m
37.2041 93.1875 l
39.0166 93.1875 l
39.0166 95.0000 l
37.2041 95.0000 l
h
41.8217 95.0156 m
41.8217 93.1875 l
42.5405 93.1875 l
42.5561 93.3593 l
42.5717 93.9218 l
42.6030 94.5156 43.0717 94.8125 43.9780 94.8125  c
44.6551 94.8125 45.1915 94.5494 45.5874 94.0234  c
45.9832 93.4974 46.1811 92.7812 46.1811 91.8750  c
46.1811 90.8437 45.8738 90.1067 45.2592 89.6640  c
44.6446 89.2213 43.6446 89.0000 42.2592 89.0000  c
41.9936 89.0000 l
41.9936 84.1562 l
47.4624 84.1562 l
47.4624 85.4218 l
42.4467 85.4218 l
42.4467 88.4531 l
43.1186 88.4531 l
46.1707 88.4531 47.6967 89.6145 47.6967 91.9375  c
47.6967 92.9791 47.3452 93.7942 46.6420 94.3828  c
45.9389 94.9713 44.9676 95.2656 43.7280 95.2656  c
43.1134 95.2656 42.4780 95.1822 41.8217 95.0156  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
51.0000 51.7683 m
47.5000 51.7683 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
31.5000 62.2656 m
30.3854 62.2656 29.4843 61.7474 28.7968 60.7109  c
28.1093 59.6744 27.7656 58.3072 27.7656 56.6093  c
27.7656 54.8697 28.1093 53.4817 28.7968 52.4453  c
29.4843 51.4088 30.4062 50.8906 31.5625 50.8906  c
32.7187 50.8906 33.6406 51.4062 34.3281 52.4375  c
35.0156 53.4687 35.3593 54.8541 35.3593 56.5937  c
35.3593 58.3333 35.0130 59.7135 34.3203 60.7343  c
33.6276 61.7552 32.6875 62.2656 31.5000 62.2656  c
h
31.5312 61.8125 m
33.0625 61.8854 33.8281 60.1145 33.8281 56.5000  c
33.8281 53.0520 33.0729 51.3281 31.5625 51.3281  c
30.0625 51.3281 29.3125 53.0781 29.3125 56.5781  c
29.3125 60.0052 30.0520 61.7500 31.5312 61.8125  c
h
37.2041 62.0000 m
37.2041 60.1875 l
39.0166 60.1875 l
39.0166 62.0000 l
37.2041 62.0000 l
h
42.5405 56.4531 m
43.2176 55.5156 44.0874 55.0468 45.1499 55.0468  c
46.0978 55.0468 46.8712 55.3619 47.4702 55.9921  c
48.0691 56.6224 48.3686 57.4375 48.3686 58.4375  c
48.3686 59.5208 48.0275 60.4296 47.3452 61.1640  c
46.6629 61.8984 45.8217 62.2656 44.8217 62.2656  c
43.6030 62.2656 42.6629 61.7890 42.0014 60.8359  c
41.3400 59.8828 41.0092 58.5208 41.0092 56.7500  c
41.0092 54.8854 41.3894 53.4401 42.1499 52.4140  c
42.9103 51.3880 43.9884 50.8750 45.3842 50.8750  c
46.2801 50.8750 47.0717 51.0364 47.7592 51.3593  c
47.7592 53.0937 l
47.0405 53.0937 l
47.0249 52.9531 l
46.9936 52.4218 l
46.9624 52.0989 46.7853 51.8359 46.4624 51.6328  c
46.1394 51.4296 45.7332 51.3281 45.2436 51.3281  c
44.3894 51.3281 43.7254 51.7760 43.2514 52.6718  c
42.7775 53.5677 42.5405 54.8281 42.5405 56.4531  c
h
42.5874 58.0000 m
42.5874 59.1145 42.8139 60.0286 43.2670 60.7421  c
43.7202 61.4557 44.3009 61.8125 45.0092 61.8125  c
46.2801 61.8125 46.9155 60.7552 46.9155 58.6406  c
46.9155 56.5781 46.2540 55.5468 44.9311 55.5468  c
44.2124 55.5468 43.6420 55.7682 43.2202 56.2109  c
42.7983 56.6536 42.5874 57.2500 42.5874 58.0000  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
51.0000 18.7297 m
47.5000 18.7297 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
31.5000 29.2656 m
30.3854 29.2656 29.4843 28.7474 28.7968 27.7109  c
28.1093 26.6744 27.7656 25.3072 27.7656 23.6093  c
27.7656 21.8697 28.1093 20.4817 28.7968 19.4453  c
29.4843 18.4088 30.4062 17.8906 31.5625 17.8906  c
32.7187 17.8906 33.6406 18.4062 34.3281 19.4375  c
35.0156 20.4687 35.3593 21.8541 35.3593 23.5937  c
35.3593 25.3333 35.0130 26.7135 34.3203 27.7343  c
33.6276 28.7552 32.6875 29.2656 31.5000 29.2656  c
h
31.5312 28.8125 m
33.0625 28.8854 33.8281 27.1145 33.8281 23.5000  c
33.8281 20.0520 33.0729 18.3281 31.5625 18.3281  c
30.0625 18.3281 29.3125 20.0781 29.3125 23.5781  c
29.3125 27.0052 30.0520 28.7500 31.5312 28.8125  c
h
37.2041 29.0000 m
37.2041 27.1875 l
39.0166 27.1875 l
39.0166 29.0000 l
37.2041 29.0000 l
h
42.1655 29.0000 m
42.3738 27.8229 42.7202 26.7994 43.2045 25.9296  c
43.6889 25.0599 44.8321 23.4114 46.6342 20.9843  c
47.7280 19.5156 l
41.6186 19.5156 l
41.6186 18.1562 l
48.5717 18.1562 l
48.5717 19.1093 l
45.6030 23.0989 44.0353 26.3958 43.8686 29.0000  c
42.1655 29.0000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
51.0000 233.480 m
49.2500 233.480 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
51.0000 200.442 m
49.2500 200.442 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
51.0000 167.403 m
49.2500 167.403 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
51.0000 134.364 m
49.2500 134.364 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
51.0000 101.326 m
49.2500 101.326 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
51.0000 68.2876 m
49.2500 68.2876 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
51.0000 35.2490 m
49.2500 35.2490 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
Q
2 J
0 j
Q
Q
cliprestore
0 0 400 300 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
1.00000 w
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
